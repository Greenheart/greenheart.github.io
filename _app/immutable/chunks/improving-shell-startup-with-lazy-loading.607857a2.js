import{s as De,B as re,C as Ee}from"./scheduler.d8bdb3a2.js";import{S as Ze,i as Ie,r as ue,u as me,v as de,d as fe,t as he,w as _e,g as i,m as g,s as u,K as pe,h as c,j as A,n as y,C as m,f as s,c as d,L as ie,k as ce,a,y as f}from"./index.676e8c1b.js";import{g as Ae,a as Pe,L as Te}from"./Link.e38fcbd0.js";import{P as Re}from"./_post.9e2f40df.js";function qe(h){let t;return{c(){t=g("Oh My Zsh")},l(o){t=y(o,"Oh My Zsh")},m(o,p){a(o,t,p)},d(o){o&&s(t)}}}function Fe(h){let t;return{c(){t=g("documentation")},l(o){t=y(o,"documentation")},m(o,p){a(o,t,p)},d(o){o&&s(t)}}}function Ue(h){let t,o,p,x,l,_="nvm",M,R,$,ve="A Simple Solution",q,C,F,Me=`<code class="language-shell"><span class="token comment"># ~/.zshrc</span>
<span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>nvm <span class="token function">git</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
zstyle <span class="token string">':omz:plugins:nvm'</span> lazy <span class="token function">yes</span> <span class="token comment"># 2</span>

<span class="token builtin class-name">source</span> <span class="token variable">$ZSH</span>/oh-my-zsh.sh <span class="token comment"># 3</span></code>`,U,w,ge="<li>Add the nvm plugin to your <code>.zshrc</code> file.</li> <li>Enable lazy loading for the <code>nvm</code> plugin.</li> <li>Make sure you source Oh My Zsh at the end.</li>",B,z,ye="This method reduced my shell startup time from <em>~1.5 s</em> to <em>~200 ms</em>. A <strong>huge</strong> improvement for a common action I perform many times daily.",K,H,ke="However, I soon realised some of my projects had external dependencies that relied on commands like <code>node</code> and <code>npm</code> (and other package managers) to always be defined in the shell environment. This caused weird crashes, since lazy loading <code>nvm</code> means commands like <code>node</code> and <code>npm</code> only gets enabled when they first got used.",W,L,xe="Conditionally Lazy Loading for Specific Directories",X,b,$e="Adding an if statement to avoid lazy loading in specific directories:",G,E,J,Oe=`<code class="language-shell"><span class="token comment"># ~/.zshrc</span>
<span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>nvm <span class="token function">git</span><span class="token punctuation">)</span>

<span class="token comment"># This excludes any subdirectory of "/your-project/"</span>
<span class="token comment"># =~ is used for RegExp matching.</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token environment constant">$PWD</span> <span class="token operator">=~</span> <span class="token string">"/your-project/"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  zstyle <span class="token string">':omz:plugins:nvm'</span> lazy <span class="token function">yes</span>
<span class="token keyword">fi</span>

<span class="token builtin class-name">source</span> <span class="token variable">$ZSH</span>/oh-my-zsh.sh</code>`,N,P,Ce="Add more commands that should load nvm",Q,r,ne,k,se,O,we="nvm",ae,S,ze="npx",le,D,He="pnpx",oe,V,T,Y,Se=`<code class="language-shell">zstyle <span class="token string">':omz:plugins:nvm'</span> lazy-cmd npx pnpx</code>`,ee,j,Le="Hopefully this saves some time, allowing you move at the speed of thought ðŸ’­",te;return p=new Te({props:{href:"https://ohmyz.sh/",rel:"nofollow",$$slots:{default:[qe]},$$scope:{ctx:h}}}),k=new Te({props:{href:"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm",rel:"nofollow",$$slots:{default:[Fe]},$$scope:{ctx:h}}}),{c(){t=i("p"),o=g("Using "),ue(p.$$.fragment),x=g(" is usually a great experience. However, adding heavy plugins (like "),l=i("code"),l.textContent=_,M=g(") to load at startup time can really hurt performance. Luckily thereâ€™s a way to lazy load them."),R=u(),$=i("h2"),$.textContent=ve,q=u(),C=i("pre"),F=new pe(!1),U=u(),w=i("ol"),w.innerHTML=ge,B=u(),z=i("p"),z.innerHTML=ye,K=u(),H=i("p"),H.innerHTML=ke,W=u(),L=i("h2"),L.textContent=xe,X=u(),b=i("p"),b.textContent=$e,G=u(),E=i("pre"),J=new pe(!1),N=u(),P=i("h2"),P.textContent=Ce,Q=u(),r=i("p"),ne=g("In the "),ue(k.$$.fragment),se=g(" for "),O=i("code"),O.textContent=we,ae=g(" plugin, there are also other features that can be useful. For example, this is how to make sure "),S=i("code"),S.textContent=ze,le=g(" and "),D=i("code"),D.textContent=He,oe=g(" work even in new terminals."),V=u(),T=i("pre"),Y=new pe(!1),ee=u(),j=i("p"),j.textContent=Le,this.h()},l(e){t=c(e,"P",{});var n=A(t);o=y(n,"Using "),me(p.$$.fragment,n),x=y(n," is usually a great experience. However, adding heavy plugins (like "),l=c(n,"CODE",{"data-svelte-h":!0}),m(l)!=="svelte-56cs2j"&&(l.textContent=_),M=y(n,") to load at startup time can really hurt performance. Luckily thereâ€™s a way to lazy load them."),n.forEach(s),R=d(e),$=c(e,"H2",{"data-svelte-h":!0}),m($)!=="svelte-1tx34f4"&&($.textContent=ve),q=d(e),C=c(e,"PRE",{class:!0});var Z=A(C);F=ie(Z,!1),Z.forEach(s),U=d(e),w=c(e,"OL",{"data-svelte-h":!0}),m(w)!=="svelte-snywqq"&&(w.innerHTML=ge),B=d(e),z=c(e,"P",{"data-svelte-h":!0}),m(z)!=="svelte-13hhzfd"&&(z.innerHTML=ye),K=d(e),H=c(e,"P",{"data-svelte-h":!0}),m(H)!=="svelte-dexto3"&&(H.innerHTML=ke),W=d(e),L=c(e,"H2",{"data-svelte-h":!0}),m(L)!=="svelte-1fzj2p7"&&(L.textContent=xe),X=d(e),b=c(e,"P",{"data-svelte-h":!0}),m(b)!=="svelte-vylsi0"&&(b.textContent=$e),G=d(e),E=c(e,"PRE",{class:!0});var I=A(E);J=ie(I,!1),I.forEach(s),N=d(e),P=c(e,"H2",{"data-svelte-h":!0}),m(P)!=="svelte-w1xjsj"&&(P.textContent=Ce),Q=d(e),r=c(e,"P",{});var v=A(r);ne=y(v,"In the "),me(k.$$.fragment,v),se=y(v," for "),O=c(v,"CODE",{"data-svelte-h":!0}),m(O)!=="svelte-56cs2j"&&(O.textContent=we),ae=y(v," plugin, there are also other features that can be useful. For example, this is how to make sure "),S=c(v,"CODE",{"data-svelte-h":!0}),m(S)!=="svelte-114skcc"&&(S.textContent=ze),le=y(v," and "),D=c(v,"CODE",{"data-svelte-h":!0}),m(D)!=="svelte-1how5ie"&&(D.textContent=He),oe=y(v," work even in new terminals."),v.forEach(s),V=d(e),T=c(e,"PRE",{class:!0});var be=A(T);Y=ie(be,!1),be.forEach(s),ee=d(e),j=c(e,"P",{"data-svelte-h":!0}),m(j)!=="svelte-13kiyjb"&&(j.textContent=Le),this.h()},h(){F.a=null,ce(C,"class","language-shell"),J.a=null,ce(E,"class","language-shell"),Y.a=null,ce(T,"class","language-shell")},m(e,n){a(e,t,n),f(t,o),de(p,t,null),f(t,x),f(t,l),f(t,M),a(e,R,n),a(e,$,n),a(e,q,n),a(e,C,n),F.m(Me,C),a(e,U,n),a(e,w,n),a(e,B,n),a(e,z,n),a(e,K,n),a(e,H,n),a(e,W,n),a(e,L,n),a(e,X,n),a(e,b,n),a(e,G,n),a(e,E,n),J.m(Oe,E),a(e,N,n),a(e,P,n),a(e,Q,n),a(e,r,n),f(r,ne),de(k,r,null),f(r,se),f(r,O),f(r,ae),f(r,S),f(r,le),f(r,D),f(r,oe),a(e,V,n),a(e,T,n),Y.m(Se,T),a(e,ee,n),a(e,j,n),te=!0},p(e,n){const Z={};n&2&&(Z.$$scope={dirty:n,ctx:e}),p.$set(Z);const I={};n&2&&(I.$$scope={dirty:n,ctx:e}),k.$set(I)},i(e){te||(fe(p.$$.fragment,e),fe(k.$$.fragment,e),te=!0)},o(e){he(p.$$.fragment,e),he(k.$$.fragment,e),te=!1},d(e){e&&(s(t),s(R),s($),s(q),s(C),s(U),s(w),s(B),s(z),s(K),s(H),s(W),s(L),s(X),s(b),s(G),s(E),s(N),s(P),s(Q),s(r),s(V),s(T),s(ee),s(j)),_e(p),_e(k)}}}function Be(h){let t,o;const p=[h[0],je];let x={$$slots:{default:[Ue]},$$scope:{ctx:h}};for(let l=0;l<p.length;l+=1)x=re(x,p[l]);return t=new Re({props:x}),{c(){ue(t.$$.fragment)},l(l){me(t.$$.fragment,l)},m(l,_){de(t,l,_),o=!0},p(l,[_]){const M=_&1?Ae(p,[_&1&&Pe(l[0]),_&0&&Pe(je)]):{};_&2&&(M.$$scope={dirty:_,ctx:l}),t.$set(M)},i(l){o||(fe(t.$$.fragment,l),o=!0)},o(l){he(t.$$.fragment,l),o=!1},d(l){_e(t,l)}}}const je={title:"Improving Oh My Zsh Startup Time with Lazy Loading",date:"2023-03-23T00:00:00.000Z",tags:["DX","Code Snippet"]};function Ke(h,t,o){return h.$$set=p=>{o(0,t=re(re({},t),Ee(p)))},t=Ee(t),[t]}class Ne extends Ze{constructor(t){super(),Ie(this,t,Ke,Be,De,{})}}export{Ne as default,je as metadata};
