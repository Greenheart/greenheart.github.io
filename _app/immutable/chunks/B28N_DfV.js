import"./DsnmJJEf.js";import"./pltd8r3C.js";import{f as l,a as o,s as p,c as e,r as t}from"./Ch4VLgmR.js";import{C as c}from"./CVvY9x6P.js";const E="nodejs-rename-file-extensions",r={title:"Rename File Extensions with Node.js",date:"2021-07-27",tags:["Code Snippet","JavaScript","Node.js"]},{title:C,date:A,tags:D}=r;var y=l("<article><p>A Node.js script to rename the file extension for all matching files in a directory.</p><!></article>");function d(n){var s=y(),a=p(e(s));c(a,{codeHTML:`<pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic">#!/usr/bin/env node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">readdir</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">rename</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> 'fs/promises'</span></span>
<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">resolve</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> 'path'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * Rename the file extension for all matching files in a directory.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E5C07B;font-style:italic"> {string}</span><span style="color:#E06C75;font-style:italic"> baseDir</span><span style="color:#7F848E;font-style:italic"> Where to find the files.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E5C07B;font-style:italic"> {function}</span><span style="color:#E06C75;font-style:italic"> shouldRenameFile</span><span style="color:#7F848E;font-style:italic"> Filter function that should return a</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> *   boolean for whether or not to rename the file.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E5C07B;font-style:italic"> {string}</span><span style="color:#E06C75;font-style:italic"> beforeExt</span><span style="color:#7F848E;font-style:italic"> The file extension to replace. If \`beforeExt\` is an</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> *   empty string, the \`afterExt\` will be added to the original filename.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E5C07B;font-style:italic"> {string}</span><span style="color:#E06C75;font-style:italic"> afterExt</span><span style="color:#7F848E;font-style:italic"> The new file extension to use instead.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@returns</span><span style="color:#7F848E;font-style:italic"> The number of files renamed.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD">async</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> updateFileExtensions</span><span style="color:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic">    baseDir</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic">    shouldRenameFile</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic">    beforeExt</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic">    afterExt</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF">}) {</span></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> files</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#C678DD">await</span><span style="color:#61AFEF"> readdir</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">baseDir</span><span style="color:#ABB2BF">)).</span><span style="color:#61AFEF">filter</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">shouldRenameFile</span><span style="color:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> renamed</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#E5C07B"> Promise</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">all</span><span style="color:#ABB2BF">(</span></span>
<span class="line"><span style="color:#E5C07B">        files</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">f</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD">            const</span><span style="color:#E5C07B"> before</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> resolve</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">baseDir</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">f</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD">            const</span><span style="color:#E5C07B"> after</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> beforeExt</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span></span>
<span class="line"><span style="color:#C678DD">                ?</span><span style="color:#E5C07B"> before</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">replace</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">beforeExt</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">afterExt</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD">                :</span><span style="color:#E06C75"> before</span><span style="color:#56B6C2"> +</span><span style="color:#E06C75"> afterExt</span></span>
<span class="line"><span style="color:#C678DD">            return</span><span style="color:#61AFEF"> rename</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">before</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">after</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#ABB2BF">        }),</span></span>
<span class="line"><span style="color:#ABB2BF">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">    return</span><span style="color:#E5C07B"> renamed</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span></span>
<span class="line"><span style="color:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> renamedCount</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> updateFileExtensions</span><span style="color:#ABB2BF">({</span></span>
<span class="line"><span style="color:#E06C75">    baseDir</span><span style="color:#ABB2BF">: </span><span style="color:#61AFEF">resolve</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">process</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">cwd</span><span style="color:#ABB2BF">(), </span><span style="color:#98C379">'images'</span><span style="color:#ABB2BF">),</span></span>
<span class="line"><span style="color:#61AFEF">    shouldRenameFile</span><span style="color:#ABB2BF">: (</span><span style="color:#E06C75;font-style:italic">f</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> f</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#56B6C2"> ===</span><span style="color:#D19A66"> 64</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75">    beforeExt</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">''</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75">    afterExt</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">'.jpg'</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B">console</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">log</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">renamedCount</span><span style="color:#ABB2BF">)</span></span>
<span class="line"></span></code></pre>`}),t(s),o(n,s)}export{d as default,r as frontmatter,E as slug};
