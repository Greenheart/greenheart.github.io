import{S as n,i as s,s as a,B as t,j as e,m as o,o as p,p as c,q as l,x as r,u as i,v as u,R as k,e as h,t as d,k as f,c as g,a as m,g as v,d as w,n as y,b as x,f as b,D as E,H as $}from"../../chunks/vendor-49daea19.js";import{P as L}from"../../chunks/_post-2795fb03.js";import"../../chunks/Tags-522f9d05.js";function S(n){let s,a,t,e,o,p,c,l,r,i,u,k,L,S,T,R,j,C,O,P,U,D,K,M,I,F,A,H,q,J,_,B,Z,z,G,N,Q,V,W,X,Y,nn,sn,an,tn,en,on,pn,cn,ln,rn;return{c(){s=h("p"),a=d("Markdown content on blogs often require you to support both internal and external links at the same time. Most of the times, you need separate behaviors for the different kinds, like for example prefetching internal links to improve page load times on your blog, while simultaneously opening external links in separate tabs without prefetching but instead with other attributes like "),t=h("code"),e=d('rel="noopener noreferrer"'),o=d("."),p=f(),c=h("p"),l=d("Fortunately, Svelte and SvelteKit provides a good solution to this problem."),r=f(),i=h("p"),u=d("First of all, we need to test if a given URL is external. This can be solved with a helper function like this:"),k=f(),L=h("pre"),S=f(),T=h("p"),R=d("Then you can use "),j=h("code"),C=d("isExternalURL()"),O=d(" to create a Svelte "),P=h("code"),U=d("<Link />"),D=d(" component that automatically handles the right attributes for both internal and external links. And with SvelteKit’s "),K=h("code"),M=d("sveltekit:prefetch"),I=d(" directive, your users will get a really smooth experience browsing your website, without compromising on how you handle external links."),F=f(),A=h("h2"),H=d("Finished SvelteKit "),q=h("code"),J=d("<Link />"),_=d(" Component"),B=f(),Z=h("pre"),z=f(),G=h("h2"),N=d("Some Thoughts About This Implementation"),Q=f(),V=h("ol"),W=h("li"),X=d("It uses two separate script contexts: One with "),Y=h("code"),nn=d('context="module"'),sn=d(" in order to only import external dependencies and create functions once during the runtime, and the other one for the component context which handles component instances and re-renders."),an=f(),tn=h("li"),en=h("code"),on=d("$$props.class"),pn=d(" is an unfortunate workaround to support external classes passed down via the regular class attribute, since "),cn=h("code"),ln=d("class"),rn=d(" is a reserved keyword in JavaScript. Let me know if you have a better solution for this!"),this.h()},l(n){s=g(n,"P",{});var h=m(s);a=v(h,"Markdown content on blogs often require you to support both internal and external links at the same time. Most of the times, you need separate behaviors for the different kinds, like for example prefetching internal links to improve page load times on your blog, while simultaneously opening external links in separate tabs without prefetching but instead with other attributes like "),t=g(h,"CODE",{});var d=m(t);e=v(d,'rel="noopener noreferrer"'),d.forEach(w),o=v(h,"."),h.forEach(w),p=y(n),c=g(n,"P",{});var f=m(c);l=v(f,"Fortunately, Svelte and SvelteKit provides a good solution to this problem."),f.forEach(w),r=y(n),i=g(n,"P",{});var x=m(i);u=v(x,"First of all, we need to test if a given URL is external. This can be solved with a helper function like this:"),x.forEach(w),k=y(n),L=g(n,"PRE",{class:!0}),m(L).forEach(w),S=y(n),T=g(n,"P",{});var b=m(T);R=v(b,"Then you can use "),j=g(b,"CODE",{});var E=m(j);C=v(E,"isExternalURL()"),E.forEach(w),O=v(b," to create a Svelte "),P=g(b,"CODE",{});var $=m(P);U=v($,"<Link />"),$.forEach(w),D=v(b," component that automatically handles the right attributes for both internal and external links. And with SvelteKit’s "),K=g(b,"CODE",{});var un=m(K);M=v(un,"sveltekit:prefetch"),un.forEach(w),I=v(b," directive, your users will get a really smooth experience browsing your website, without compromising on how you handle external links."),b.forEach(w),F=y(n),A=g(n,"H2",{});var kn=m(A);H=v(kn,"Finished SvelteKit "),q=g(kn,"CODE",{});var hn=m(q);J=v(hn,"<Link />"),hn.forEach(w),_=v(kn," Component"),kn.forEach(w),B=y(n),Z=g(n,"PRE",{class:!0}),m(Z).forEach(w),z=y(n),G=g(n,"H2",{});var dn=m(G);N=v(dn,"Some Thoughts About This Implementation"),dn.forEach(w),Q=y(n),V=g(n,"OL",{});var fn=m(V);W=g(fn,"LI",{});var gn=m(W);X=v(gn,"It uses two separate script contexts: One with "),Y=g(gn,"CODE",{});var mn=m(Y);nn=v(mn,'context="module"'),mn.forEach(w),sn=v(gn," in order to only import external dependencies and create functions once during the runtime, and the other one for the component context which handles component instances and re-renders."),gn.forEach(w),an=y(fn),tn=g(fn,"LI",{});var vn=m(tn);en=g(vn,"CODE",{});var wn=m(en);on=v(wn,"$$props.class"),wn.forEach(w),pn=v(vn," is an unfortunate workaround to support external classes passed down via the regular class attribute, since "),cn=g(vn,"CODE",{});var yn=m(cn);ln=v(yn,"class"),yn.forEach(w),rn=v(vn," is a reserved keyword in JavaScript. Let me know if you have a better solution for this!"),vn.forEach(w),fn.forEach(w),this.h()},h(){x(L,"class","language-ts"),x(Z,"class","language-svelte")},m(n,h){b(n,s,h),E(s,a),E(s,t),E(t,e),E(s,o),b(n,p,h),b(n,c,h),E(c,l),b(n,r,h),b(n,i,h),E(i,u),b(n,k,h),b(n,L,h),L.innerHTML='<code class="language-ts"><span class="token comment">/**\n * Test if an URL is external.\n *\n * @param href &#123;string&#125; The URL to test.\n * @returns True if the link is external, and false otherwise.\n */</span>\n<span class="token keyword">function</span> <span class="token function">isExternalURL</span><span class="token punctuation">(</span>href<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">)</span>\n    a<span class="token punctuation">.</span>href <span class="token operator">=</span> href\n    <span class="token keyword">return</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host <span class="token operator">!==</span> a<span class="token punctuation">.</span>host\n<span class="token punctuation">&#125;</span></code>',b(n,S,h),b(n,T,h),E(T,R),E(T,j),E(j,C),E(T,O),E(T,P),E(P,U),E(T,D),E(T,K),E(K,M),E(T,I),b(n,F,h),b(n,A,h),E(A,H),E(A,q),E(q,J),E(A,_),b(n,B,h),b(n,Z,h),Z.innerHTML='<code class="language-svelte"><span class="token comment">&lt;!-- Link.svelte --\x3e</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> onMount <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'svelte\'</span>\n\n    <span class="token comment">/**\n     * Test if an URL is external.\n     *\n     * @param href &#123;string&#125; The URL to test.\n     * @returns True if the link is external, and false otherwise.\n     */</span>\n    <span class="token keyword">function</span> <span class="token function">isExternalURL</span><span class="token punctuation">(</span><span class="token parameter">href<span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">&#123;</span>\n        <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">)</span>\n        a<span class="token punctuation">.</span>href <span class="token operator">=</span> href\n        <span class="token keyword">return</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host <span class="token operator">!==</span> a<span class="token punctuation">.</span>host\n    <span class="token punctuation">&#125;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">export</span> <span class="token keyword">let</span> href <span class="token operator">=</span> <span class="token string">\'\'</span>\n    <span class="token keyword">let</span> additionalProps<span class="token operator">:</span> object\n    <span class="token keyword">const</span> classes <span class="token operator">=</span> <span class="token punctuation">[</span>$$props<span class="token punctuation">.</span>class <span class="token operator">??</span> <span class="token string">\'\'</span><span class="token punctuation">,</span> <span class="token string">\'default\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token function">onMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isExternalURL</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n            additionalProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n                rel<span class="token operator">:</span> <span class="token string">\'noopener noreferrer\'</span><span class="token punctuation">,</span>\n                target<span class="token operator">:</span> <span class="token string">\'_blank\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">&#125;</span>\n        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n            additionalProps <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n                <span class="token string">\'sveltekit:prefetch\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">&#125;</span>\n        <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>href<span class="token punctuation">&#125;</span></span> <span class="token attr-name">class=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>classes<span class="token punctuation">&#125;</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>$$props<span class="token punctuation">&#125;</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>additionalProps<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code>',b(n,z,h),b(n,G,h),E(G,N),b(n,Q,h),b(n,V,h),E(V,W),E(W,X),E(W,Y),E(Y,nn),E(W,sn),E(V,an),E(V,tn),E(tn,en),E(en,on),E(tn,pn),E(tn,cn),E(cn,ln),E(tn,rn)},p:$,d(n){n&&w(s),n&&w(p),n&&w(c),n&&w(r),n&&w(i),n&&w(k),n&&w(L),n&&w(S),n&&w(T),n&&w(F),n&&w(A),n&&w(B),n&&w(Z),n&&w(z),n&&w(G),n&&w(Q),n&&w(V)}}}function T(n){let s,a;const k=[n[0],R];let h={$$slots:{default:[S]},$$scope:{ctx:n}};for(let e=0;e<k.length;e+=1)h=t(h,k[e]);return s=new L({props:h}),{c(){e(s.$$.fragment)},l(n){o(s.$$.fragment,n)},m(n,t){p(s,n,t),a=!0},p(n,[a]){const t=1&a?c(k,[1&a&&l(n[0]),0&a&&l(R)]):{};2&a&&(t.$$scope={dirty:a,ctx:n}),s.$set(t)},i(n){a||(r(s.$$.fragment,n),a=!0)},o(n){i(s.$$.fragment,n),a=!1},d(n){u(s,n)}}}const R={title:"Automatic Internal and External Links in SvelteKit",date:"2021-07-31T00:00:00.000Z",tags:["TypeScript","Svelte","SvelteKit","Code Snippet"]};function j(n,s,a){return n.$$set=n=>{a(0,s=t(t({},s),k(n)))},[s=k(s)]}class C extends n{constructor(n){super(),s(this,n,j,T,a,{})}}export{C as default,R as metadata};
