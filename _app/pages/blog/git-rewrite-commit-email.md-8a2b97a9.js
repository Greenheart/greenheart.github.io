import{S as X,i as ee,s as te,D as O,x as z,y as F,z as Z,A as oe,B as D,r as J,p as K,C as Q,R as N,e as p,t as $,k as L,c as f,a as d,h as y,d as a,m as T,b as ae,g as u,F as c}from"../../chunks/index-16cdd259.js";import{P as ie}from"../../chunks/_post-3a3b226b.js";import{L as le}from"../../chunks/Link-90aa2cf3.js";import"../../chunks/constants-fb6fef14.js";import"../../chunks/Tags-85ad00f6.js";import"../../chunks/utils-a0fbfa6c.js";function se(_){let t;return{c(){t=$("StackOverflow")},l(i){t=y(i,"StackOverflow")},m(i,s){u(i,t,s)},d(i){i&&a(t)}}}function re(_){let t,i,s,m,o,r,n,v,b,P,R,E,k,j,x,g,V=`<code class="language-shell"><span class="token function">git</span> filter-branch --commit-filter <span class="token string">'
      if [ "$GIT_AUTHOR_EMAIL" = "old@email.com" ];
      then
              GIT_AUTHOR_NAME="Your Name";
              GIT_AUTHOR_EMAIL="new@email.com";
              git commit-tree "$@";
      else
              git commit-tree "$@";
      fi'</span> HEAD</code>`,A,w,B,h,H;return h=new le({props:{href:"https://stackoverflow.com/a/2931914/4183985",rel:"nofollow",$$slots:{default:[se]},$$scope:{ctx:_}}}),{c(){t=p("p"),i=$("Here\u2019s a quick way to update commit author email and display name for previous commits in a local project."),s=L(),m=p("p"),o=$("Two things worth mentioning before using this:"),r=L(),n=p("ol"),v=p("li"),b=p("p"),P=$("If you change your email, it might no longer count as contributions on your GitHub/GitLab profile. But as long as you keep the old email as a hidden email connected to your account, it should work."),R=L(),E=p("li"),k=p("p"),j=$("Remember that rewriting history in shared projects is a bad idea. Especially when working in a collaborative environment with other people. But for old local projects that you want to upload to a public Git repository, this method could be useful to hide some personal information."),x=L(),g=p("pre"),A=L(),w=p("p"),B=$("Credit: "),z(h.$$.fragment),this.h()},l(e){t=f(e,"P",{});var l=d(t);i=y(l,"Here\u2019s a quick way to update commit author email and display name for previous commits in a local project."),l.forEach(a),s=T(e),m=f(e,"P",{});var G=d(m);o=y(G,"Two things worth mentioning before using this:"),G.forEach(a),r=T(e),n=f(e,"OL",{});var I=d(n);v=f(I,"LI",{});var S=d(v);b=f(S,"P",{});var M=d(b);P=y(M,"If you change your email, it might no longer count as contributions on your GitHub/GitLab profile. But as long as you keep the old email as a hidden email connected to your account, it should work."),M.forEach(a),S.forEach(a),R=T(I),E=f(I,"LI",{});var U=d(E);k=f(U,"P",{});var q=d(k);j=y(q,"Remember that rewriting history in shared projects is a bad idea. Especially when working in a collaborative environment with other people. But for old local projects that you want to upload to a public Git repository, this method could be useful to hide some personal information."),q.forEach(a),U.forEach(a),I.forEach(a),x=T(e),g=f(e,"PRE",{class:!0});var W=d(g);W.forEach(a),A=T(e),w=f(e,"P",{});var C=d(w);B=y(C,"Credit: "),F(h.$$.fragment,C),C.forEach(a),this.h()},h(){ae(g,"class","language-shell")},m(e,l){u(e,t,l),c(t,i),u(e,s,l),u(e,m,l),c(m,o),u(e,r,l),u(e,n,l),c(n,v),c(v,b),c(b,P),c(n,R),c(n,E),c(E,k),c(k,j),u(e,x,l),u(e,g,l),g.innerHTML=V,u(e,A,l),u(e,w,l),c(w,B),Z(h,w,null),H=!0},p(e,l){const G={};l&2&&(G.$$scope={dirty:l,ctx:e}),h.$set(G)},i(e){H||(J(h.$$.fragment,e),H=!0)},o(e){K(h.$$.fragment,e),H=!1},d(e){e&&a(t),e&&a(s),e&&a(m),e&&a(r),e&&a(n),e&&a(x),e&&a(g),e&&a(A),e&&a(w),Q(h)}}}function ne(_){let t,i;const s=[_[0],Y];let m={$$slots:{default:[re]},$$scope:{ctx:_}};for(let o=0;o<s.length;o+=1)m=O(m,s[o]);return t=new ie({props:m}),{c(){z(t.$$.fragment)},l(o){F(t.$$.fragment,o)},m(o,r){Z(t,o,r),i=!0},p(o,[r]){const n=r&1?oe(s,[r&1&&D(o[0]),r&0&&D(Y)]):{};r&2&&(n.$$scope={dirty:r,ctx:o}),t.$set(n)},i(o){i||(J(t.$$.fragment,o),i=!0)},o(o){K(t.$$.fragment,o),i=!1},d(o){Q(t,o)}}}const Y={title:"Update Your Git Commit Email Address Before Pushing to Remote Repository",date:"2021-07-23T00:00:00.000Z",tags:["Git","Code Snippet"]};function me(_,t,i){return _.$$set=s=>{i(0,t=O(O({},t),N(s)))},t=N(t),[t]}class he extends X{constructor(t){super(),ee(this,t,me,ne,te,{})}}export{he as default,Y as metadata};
